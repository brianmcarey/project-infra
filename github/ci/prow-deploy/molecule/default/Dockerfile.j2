FROM {{ item.image }}

RUN printf '#!/bin/bash\n\
echo "Podman in Container enabled, initializing..."\n\
printf '=%.0s' {1..80}; echo\n\
(\n\
    PODMAN_SOCKET_PATH=/run/podman\n\
    PODMAN_SOCKET=${PODMAN_SOCKET_PATH}/podman.sock\n\
    mkdir -p ${PODMAN_SOCKET_PATH}\n\
    podman system service \
                -t 0 \
                unix://${PODMAN_SOCKET} \
                >/var/log/podman.log 2>&1 & \
    echo "${!}" > /var/run/podman.pid \n\
    ln -s ${PODMAN_SOCKET} /var/run/docker.sock \n\
    sed -i 's/short-name-mode="enforcing"/short-name-mode="permissive"/g' /etc/containers/registries.conf \n\
)\n\
# the service can be started but the docker socket not ready, wait for ready\n\
WAIT_N=0\n\
MAX_WAIT=10\n\
while true; do\n\
    curl --unix-socket "${PODMAN_SOCKET}" http://d/v3.0.0/libpod/info >/dev/null 2>&1 && break\n\
    if [[ ${WAIT_N} -lt ${MAX_WAIT} ]]; then\n\
        WAIT_N=$((WAIT_N+1))\n\
        echo "Waiting for podman to be ready, sleeping for ${WAIT_N} seconds."\n\
        sleep ${WAIT_N}\n\
    else\n\
        echo "Reached maximum attempts, not waiting any longer..."\n\
        break\n\
    fi\n\
done\n\
printf '=%.0s' {1..80}; echo\n\
echo "Done setting up podman in container."'\
  >> /usr/local/bin/start_pinc.sh

RUN chmod a+x /usr/local/bin/start_pinc.sh

ENTRYPOINT []

CMD ["bash"]
